trigger:
- master

pool:
  name: 'my-custom-agent'

variables:
  # Project name and artifact details
  projectName: 'devops-project'
  artifactName: 'devops-project-build.zip'
  artifactPath: '$(Build.ArtifactStagingDirectory)/$(artifactName)'

stages:
- stage: Build
  jobs:
  - job: BuildAndPackage
    steps:
    # Step 1: Install Amazon Corretto 8 (Java 8)
    - script: |
        # Download and install Amazon Corretto 8 (Java 8)
        wget https://corretto.aws/downloads/latest/amazon-corretto-8-x64-linux-jdk.deb
        sudo dpkg -i amazon-corretto-8-x64-linux-jdk.deb
        sudo apt-get update
        sudo apt-get install -f
        java -version  # Verify Java installation
      displayName: 'Install Amazon Corretto 8'

    # Step 2: Set JAVA_HOME for Maven
    - script: |
        # Set JAVA_HOME for Maven
        export JAVA_HOME=/usr/lib/jvm/java-8-amazon-corretto
        export PATH=$JAVA_HOME/bin:$PATH
        echo "JAVA_HOME=$JAVA_HOME"
        java -version  # Verify Java environment
      displayName: 'Set JAVA_HOME for Maven'

    # Step 3: Set MAVEN_HOME and update PATH for Maven 3.5.2
    - script: |
        # Set MAVEN_HOME to the location of Maven 3.5.2 and update the PATH
        export MAVEN_HOME=/opt/apache-maven-3.5.2
        export PATH=$MAVEN_HOME/bin:$PATH
        mvn -v  # Verify Maven version
      displayName: 'Set MAVEN_HOME for Maven 3.5.2'

    # Step 4: Restore dependencies from Azure Artifacts
    - task: Maven@4  # Use Maven@4 (updated version) since Maven@3 is deprecated
      inputs:
        mavenPomFile: 'pom.xml'
        options: '-s /home/azureuser/.m2/settings.xml'
        goals: 'dependency:resolve'

    # Step 5: Compile the code
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        options: '-s settings.xml'
        goals: 'clean compile'

    # Step 6: Generate the build file (JAR/WAR)
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        options: '-s settings.xml'
        goals: 'package'

    # Step 7: Archive the build file
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(artifactName)'
        replaceExistingArchive: true

    # Step 8: Publish the artifact to Azure DevOps (optional)
    - task: PublishBuildArtifacts@1
      inputs:
        artifactName: '$(artifactName)'
        targetPath: '$(Build.ArtifactStagingDirectory)'
        publishLocation: 'Container'

- stage: UploadToBlob
  dependsOn: Build
  jobs:
  - job: UploadToBlobStorage
    steps:
    # Step 9: Upload the build file to Blob Storage
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'access-connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az storage blob upload \
            --account-name fouedtrabelsi \
            --container-name devopsbuildartefact \
            --file $(Build.ArtifactStagingDirectory)/$(artifactName) \
            --name $(artifactName) \
            --auth-mode key
